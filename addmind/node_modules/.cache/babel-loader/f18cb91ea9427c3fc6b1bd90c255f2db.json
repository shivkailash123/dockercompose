{"ast":null,"code":"var _jsxFileName = \"D:\\\\addmind\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mind: {\n        mid: 0,\n        name: 'shiv',\n        ctc: 0\n      },\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    }); // fetch('http://localhost:8080/mind/getmind')\n    //   .then(response => response.json())\n    //   .then(data => this.setState({mind: data, isLoading: false}))\n    //   .catch((error) => {\n    //     console.error(error);\n    //   });\n\n    fetch('http://localhost:8080/mind/getmind').then(response => response.json()).then(jsonData => {\n      // jsonData is parsed json object received from url\n      console.log(jsonData);\n      this.setState({\n        mind: jsonData,\n        isLoading: false\n      });\n    }).catch(error => {\n      // handle your errors here\n      console.error(error);\n    });\n  }\n\n  render() {\n    // if(this.state.isLoading===true){\n    //   return(\n    //   <p>Loading................</p>\n    //   )\n    // }else{\n    //   return( <div>\n    //     <p>Shiv</p>\n    //     <h1 > {this.state.mind.name}</h1>\n    //     <p>{this.state.mind.ctc}</p>\n    //   </div>)\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }\n    }, \"Loading........\") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 53\n      }\n    }, this.state.mind.name));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/addmind/src/App.js"],"names":["React","Component","renderIntoDocument","App","constructor","props","state","mind","mid","name","ctc","isLoading","componentDidMount","setState","fetch","then","response","json","jsonData","console","log","catch","error","render"],"mappings":";AAEA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAClBC,QAAAA,GAAG,EAAC,CADc;AAElBC,QAAAA,IAAI,EAAC,MAFa;AAGlBC,QAAAA,GAAG,EAAC;AAHc,OAAP;AAIVC,MAAAA,SAAS,EAAE;AAJD,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAACF,MAAAA,SAAS,EAAE;AAAZ,KAAd,EADkB,CAGlB;AACA;AACA;AACA;AACA;AACA;;AAGEG,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,QAAD,IAAc;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKL,QAAL,CAAc;AAACN,QAAAA,IAAI,EAACW,QAAN;AAAeP,QAAAA,SAAS,EAAC;AAAzB,OAAd;AAED,KAPD,EAQCU,KARD,CAQQC,KAAD,IAAW;AAChB;AACAH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAXD;AAaH;;AAEDC,EAAAA,MAAM,GAAE;AACN;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWK,SAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAArB,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWC,IAAX,CAAgBE,IAArB,CAD/C,CADF;AAKF;;AAxD2B;;AAyD5B,eAAeN,GAAf","sourcesContent":["\n\nimport './App.css';\nimport React, { Component } from 'react';\nimport { renderIntoDocument } from 'react-dom/test-utils';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {mind: {\n      mid:0,\n      name:'shiv',\n      ctc:0\n    }, isLoading: true};\n   \n  }\n\n  componentDidMount() {\n    this.setState({isLoading: true});\n\n    // fetch('http://localhost:8080/mind/getmind')\n    //   .then(response => response.json())\n    //   .then(data => this.setState({mind: data, isLoading: false}))\n    //   .catch((error) => {\n    //     console.error(error);\n    //   });\n\n\n      fetch('http://localhost:8080/mind/getmind')\n      .then(response => response.json())\n      .then((jsonData) => {\n        // jsonData is parsed json object received from url\n        console.log(jsonData)\n        this.setState({mind:jsonData,isLoading:false})\n       \n      })\n      .catch((error) => {\n        // handle your errors here\n        console.error(error)\n      })\n\n  }\n\n  render(){\n    // if(this.state.isLoading===true){\n    //   return(\n    //   <p>Loading................</p>\n    //   )\n    // }else{\n   \n    //   return( <div>\n    //     <p>Shiv</p>\n    //     <h1 > {this.state.mind.name}</h1>\n    //     <p>{this.state.mind.ctc}</p>\n    //   </div>)\n    // }\n   return(\n     <div>\n       {this.state.isLoading?<p>Loading........</p>:<h1>{this.state.mind.name}</h1>}\n     </div>\n   )\n}}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}